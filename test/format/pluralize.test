include
	.inject('/src/utils/pluralizer.js')
	.done(function(){
		
		UTest({
			
			'strict': function(){
				
				var pattern = '11:Eleven; 20: Twenty';
				test(pattern, {
					'11': 'Eleven',
					'20': 'Twenty'
				});
			},
			
			'strict many': function(){
				var pattern = '2,4:Baz;';
				test(pattern, {
					'2': 'Baz',
					'3': '',
					'4': 'Baz',
				});
			},
			
			'strict range': function(){
				var pattern = '11-13:Baz;';
				test(pattern, {
					'11': 'Baz',
					'12': 'Baz',
					'13': 'Baz',
				});
			},
			
			'ending': function(){
				var pattern = '*11:Foo; *1:Bar';
				test(pattern, {
					'11': 'Foo',
					'211': 'Foo',
					'1': 'Bar',
					'21': 'Bar',
					'31': 'Bar',
					'51': 'Bar',
					'91': 'Bar',
					'1161': 'Bar',
					'1110': ''
				});
			},
			'ending range': function(){
				var pattern = '*2-4:Qux';
				test(pattern, {
					'12': 'Qux',
					'33': 'Qux',
					'454': 'Qux',
					'17': ''
				})
			},
			
			'days - ru': function(){
				var pattern = '*0, *5-9, *11-14:дней; *1: день; *2-4: дня;';
				test(pattern,{
					'0': 'дней',
					'1': 'день',
					'2': 'дня',
					'11': 'дней',
					'201': 'день',
					'212': 'дней',
					'222': 'дня'
				})
			},
			'days - ru - culture pattern': function(){
				var culture = "*0, *5-9, *11-14:2; *1: 0; *2-4: 1",
					pattern = "дом,дома,домов";
				
				test(pattern, {
					'0': 'домов',
					'1': 'дом',
					'2': 'дома',
					'11': 'домов',
					'201': 'дом',
					'212': 'домов',
					'222': 'дома'
				}, culture)
			}
		});
		
		function test(pattern, object, culture){
			var num,
				val,
				cultureInfo = { Pluralize: culture }
				;
			for(num in object){
				val = pluralize(parseInt(num), pattern, cultureInfo);
				eq_(val, object[num], num + ' ~ ' + pattern);
			}
		}
	})