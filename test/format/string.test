include
    .inject([
        '/src/lang/lang.js',
        '/src/lang/en.js',
        '/src/utils/is.js',
        '/src/utils/obj.js',
		'/src/utils/cursor.js',
        '/src/utils/date.js',
        '/src/utils/number.js',
        '/src/utils/pluralizer.js',
        '/src/utils/string.js'
    ])
    .done(function(){
        
        
        UTest({
			'string': {
				'concat': function(){
					eq_(str_format('A','B','C'), 'A B C')
				},
				'simple': function(){
					var date = new Date(2014, 0, 1, 9, 0, 0),
						obj = {
							toString: function(){
								return 3;
							}
						};
					eq_(
						str_format('- {0} - {1} - {2}', 1, '2', obj),
						'- 1 - 2 - 3'
					);
				},
				'date _ align _ number': function(){
					var date = new Date(2014, 0, 1);
					eq_(
						str_format('{0:yy}|{1,-5}|{2:,0.00}', date, 'f', 1234),
						'14|f    |1,234.00');
				},
				'printf' : function(){
					eq_(
						str_format('- %s - %s -', 'Bar', 'Baz'),
						'- Bar - Baz -'
					)
				},
				'format _ concat': function(){
					eq_(
						str_format('Lorem {0} dolor', 'ipsum', 'sit', 'amet'),
						'Lorem ipsum dolor sit amet'
					)
				},
				
				'format _ printf _ concat': function(){
					eq_(
						str_format('Lorem {0} dolor %s amet', 'ipsum', 'sit', ','),
						'Lorem ipsum dolor sit amet ,'
					)
				},
			},
            
            'property accessor': function(){
                var val = str_format('My {name}, {name.length}', {
                    name: 'Baz'
                });
                eq_(val, 'My Baz, 3');
            },
			'pluralize': {
				'simple': function(){
					var str = '{0} {0; *0,*11-14,*5-9: дней; *1: день; *2-4:дня }';
					[
						[1, 'день'],
						[2, 'дня'],
						[5, 'дней'],
						[21, 'день'],
						[102, 'дня'],
						[106, 'дней'],
						[53862, 'дня']
					]
					.forEach(function(row){
						eq_(str_format(str, row[0]), row[0] + ' ' + row[1]);
					})
				},
				'nested': function(){
					var str = 'My {num; 0,*3:Foo; 1,2: Quz {name}; *50: I {age; 0: New; *:Exp}; }';
					[
						[ 	{
								num: 0,
								name: 'Baz'
							},
							'My Foo'
						],
						[ 	{
								num: 3,
								name: 'Baz'
							},
							'My Foo'
						],
						[ 	{
								num: 33,
								name: 'Baz'
							},
							'My Foo'
						],
						[ 	{
								num: 1,
								name: 'Baz'
							},
							'My Quz Baz'
						],
						[ 	{
								num: 150,
								age: 0,
								name: 'Qux'
							},
							'My I New'
						],
						[ 	{
								num: 50,
								age: 1,
								name: 'Qux'
							},
							'My I Exp'
						]
					]
					.forEach(function(row) {
						eq_(str_format(str, row[0]), row[1]);
					});
				}
			}
        })
    })